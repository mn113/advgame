//create bounding box for movement (SVG path?) -> used binary NavMesh
//invisible overlay click-catcher
//diagonal walking / simultaneous x+y animation
//z-axis so he passes behind nearer stuff -> set css z-index property to y coord upon move?
//highlight multiple tiles
//account for F10 having an extra char over F9
//obstacles / A* path finding
//switch from 'F5' notation to [4][5] notation (or possibly {x:4,y:5} object notation)
//use path for walking 
//walk tile-by-tile, not in 1 huge chunk
//break the path down into straights to allow animation time
//walk smoothly: 2px per loop, 20-28 loops within each tile
//hand-code SVG path through the node path
//try a bezier program
//find a fix to give walking speed which doesnt vary with distance
//context menu: look, talk, get, use
//not a hovering context menu, but a tool panel which changes the cursor
//hotkeys to assist player actions
//in-game object
//pick up object action
//put code in htdocs and run on MAMP
//inventory (graphical + logical)
//refactor code in OO stylee
//base object for all elements to extend
//clickable NPC
//click/hover handler which recognises items, characters
//areas he can look at, touch etc -> invisible divs simplest?
//fixeditem extends item? or vice versa
//multiple descriptions
//dialogue bar
//alternate dialogue colours
//dialogue chooser
//prevent duplicated dialogue on screen
//inventory items clickable
//use inventory item solo
//use inventory item with other
//use fixed items
//drag-n-droppable possessions -> jQueryUI
//droppable characters, items
//door, room exit point
//fix inv-item positioning
//handle y < 0 clicks by converting to 0
//place for hidden/inactive items?
//sprite:hover colour outline via Photoshop;
//item drag springback
//inventory items need containers
//inventory grid positioning
//inventory tooltips
//flash new inventory items
//try to have new item appear in same spot as removed one
different item icons in inventory & stage
drag/drop styles
inventory sandbox?
//walkTo should accept objects
//ditch gridwalking, go to walkboxes
//combine visibility with A* for pathfinding
//combine Player.use() & Player.canUse() into 1 fn with Boolean param
//fix viewport size (320*200)
//load rooms & contents by ajax: $.load()?
//detach change() so independent of Rooms
//add non-gridded backwall area (60px?) - give each room a baseline attribute
//.stop() steve spazzing on multi-click
//increase y-coord by n*5px on all false clicks to put in a walkbox (variable baseline)
//foreground layers to go behind
//make side-scrolling areas
//item tooltips on stage
//store a session
//add a midground, fix foreground
//have constructor functions create html elements, reducing the file dependency?
//restyle all dialogue ui
//npc can say multiple lines
//build a little delay into the dialogues
//custom sizes for exits, items, scenery etc...
//selectable verbs
//action line
//actions that happen on an examine (name change, icon change, puzzle advance, convos...)
highlight valid verbs when dragging item
//link 2 rooms via exits
//when switching rooms, dont necessarily load js file - check rooms object first (preserves state)
//preserve state of room and everything in it, for switching
//R5 implement sprite scaling (per-walkbox value?)
//R5 lighting effects
//R5 parallax backgrounds/foregrounds
R5 vertical walk speed < horizontal walk speed (depending on perspective) - not worth doing?
//3d transform to bring in save/load screen
//dialogues where back n forth continues unprompted
//different option text and dialogue for player
//cutscenes using NPC.say() and NPC.walkTo()
//disable + enable input
//dialogues where NPC speaks to you first
//allow multiple dialogue texts on screen simultaneously
//thumbnail based on background image
//autosave feature (every 60 seconds?)
save thumbnail of screenshot using html2canvas as base64 with savegames
vars to save: rooms; entities; inventory; state; progress; npc positions; dialogue states?;
//lock down to bg1 & define sizes of exit boxes
//revert inactive player to forward-facing (unless rear-facing)
//double speed walking	
//fix auto-scroll & centering
//basic mouth animation (eyes, eyebrows...)
//fix parallax foreground
//couple of idle animations for hero
//add a NPC
//do away with baseline - it can vary
//add static items & free items
//fix autosave loop, make it global
//improve look of spoken text
//make speakers face each other
//animate mouth only when speaking
//sideways talking animation
//keep dialogue directly above speaker
//use Promises or Generators to simplify cutscene syntax
make speakers eyes look at each other

/highlighting of interactables
capitalisation of lower case
clicks as primary interation (walk to & best action)

	
player anims: crouch reach, mid reach, high reach (n,s,e,w)

try velocity.js and/or transit
do animations with requestAnimationFrame?
use CSS for parallax effects?

put each rooms js with its html?
make central library of characters, scenery, items etc - so dont have to define each in js
	
resolution changer: 1x, 2x, 3x, 4x (css/js)

rewrite geometry functions to all use {x:0,y:0} point objects [DANGEROUS!]


var progress = {
	picked_bread: false,
	opened_chest: false,
	got_cheese: false,
	sliced_bread: false,
	made_sandwich: false,
	got_key: false,
	opened_door: false
	// hundreds more...
}

puzzles object which stores the state of each key step
puzzles: {act1: {puzzle1: {get_bread_from_pepper: false}}}

PUZZLE 1
- pick up bread								// OK
- talk to pepper -> get cheese				// OK
- open (use) chest -> get knife				// OK
- use knife with bread -> sliced bread		// OK
- use bread with cheese -> sandwich			// OK
- (talk to john)							// OK
- give (use) sandwich to john -> get key	// OK
- use key in door							// OK
- exit room									// OK
